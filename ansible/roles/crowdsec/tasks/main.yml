---
# Tasks file for crowdsec-plus-console

# - fail:
#     msg: "bailing out, this role requires 'crowdsec_enroll_key'  and 'crowdsec_enroll_name' to be defined."
#   when:
#   - crowdsec_enroll_key is not defined
#   - crowdsec_enroll_name is not defined

- name: Check if CrowdSec is already installed
  stat:
    path: /etc/crowdsec/
  register: crowdsec_installed

- name: Download crowdsec repo install script
  get_url:
    url: https://packagecloud.io/install/repositories/crowdsec/crowdsec/script.deb.sh
    dest: /root/crowdsecinstaller.sh
    mode: 0755
  become: true
  when: not crowdsec_installed.stat.exists

- name: Execute CrowdSec repo install script
  command: /root/crowdsecinstaller.sh
  become: true
  when: not crowdsec_installed.stat.exists

- name: Remove the CrowdSec repo install script
  file:
    path: /root/crowdsecinstaller.sh
    state: absent

- name: Add CrowdSec package
  apt:
    name: crowdsec
    state: present
  become: true

- name: Add crowdsec-firewall-bouncer-iptables package
  apt:
    name: crowdsec-firewall-bouncer-iptables
    state: present
  become: true

# - name: Check if CrowdSec dashboard has been setup
#   stat:
#     path: /etc/crowdsec/metabase/metabase.yaml
#   register: dashboard_setup

# - name: Add docker.io package
#   apt:
#     name: docker.io
#     state: present
#   become: true

# - name: Setup CrowdSec dashboard
#   expect:
#     command: cscli dashboard setup
#     responses:
#       '(.*)(Metabase requires 1-2GB of RAM, your system is below this requirement)(.*)': 'Y'
#   become: true
#   when: not dashboard_setup.stat.exists

# - name: install whitelist-good-actors collection
#   shell: cscli collections install crowdsecurity/whitelist-good-actors
#   when: crowdsec_whitelist_good_actors | bool
#   become: true

- name: Check if server is already enrolled in CrowdSec console
  lineinfile:
    path: /etc/crowdsec/console.yaml
    regexp: 'false'
    state: absent
  check_mode: true
  register: console_enrolled
  changed_when: false

- name: Debug console_enrolled variable
  debug:
    var: {{ console_enrolled }}

- name: Set CrowdSec console variables
  set_fact:
    crowdsec_enroll_name: "{{ lookup('env', 'CONSOLE_NAME') }}"
    crowdsec_enroll_key: "{{ lookup('env', 'CONSOLE_KEY') }}"
  when: console_enrolled.found

- name: Enroll this machine to CrowdSec console
  command: cscli console enroll --name {{ crowdsec_enroll_name }} {{ crowdsec_enroll_key }}
  become: true
  when: console_enrolled.found

...
