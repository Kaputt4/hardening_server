---
# Change users configuration

- name: Set env with nobody/nfsnobody username
  set_fact:
    nobody_user: "{{ 'nfsnobody' if ansible_distribution == 'Amazon' else 'nobody' }}"

- name: Check password expiration of {{ nobody_user }}
  shell: chage -l {{ nobody_user }} | sed -n '6p' | grep "password must be changed"
  register: nobody_expired
  changed_when: false
  failed_when: false

- name: Expire password of {{ nobody_user }}
  command: passwd -e {{ nobody_user }}
  when: nobody_expired.rc != 0

- name: Check account expiration of {{ nobody_user }}
  shell: chage -l {{ nobody_user }} | sed -n '6p' | grep 45
  register: nobody_expiration
  changed_when: false
  failed_when: false

- name: Change account expiration of {{ nobody_user }}
  command: chage -m 2 -M 45 -W 10 {{ nobody_user }}
  when: nobody_expiration.rc != 0

- name: Check sudo account expiration
  shell: chage -l root | sed -n '6p' | grep 45
  register: sudo_expiration
  changed_when: false
  failed_when: false

- name: Change sudo account expiration
  command: chage -m 2 -M 45 -W 10 root
  when: sudo_expiration.rc != 0

- name: Change /home/ubuntu permissions
  file:
    path: /home/ubuntu
    owner: ubuntu
    group: ubuntu
    mode: u=rwx,g=rx,o=
  when: ansible_os_family == "Debian"

- name: Change /home/centos permissions
  file:
    path: /home/centos
    owner: centos
    group: centos
    mode: u=rwx,g=rx,o=
  when:
    - ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'
    - ansible_distribution_major_version == "7" or ansible_distribution_major_version == "8"

- name: Change /home/ec2-user permissions EL/CentOS
  file:
    path: /home/ec2-user
    owner: ec2-user
    group: ec2-user
    mode: u=rwx,g=rx,o=
  when: >
    ((ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux') and
    ansible_distribution_major_version == "9") or
    ansible_distribution == 'Amazon'

- name: Get current user and home
  set_fact:
    current_user: "{{ lookup('env', 'USER') }}"
    current_home: "{{ lookup('env', 'HOME') }}"

- name: Change current user's /home permissions
  file:
    path: "{{ current_home }}"
    owner: "{{ current_user }}"
    group: "{{ current_user }}"
    mode: u=rwx,g=rx,o=
  when:
    - current_user !- "ubuntu"
    - current_user !- "centos"
    - current_user !- "ec2-user"

- name: Find users without password
  shell: cat /etc/shadow | cut -d":" -f-2 | grep ":$" | cut -d":" -f1
  changed_when: false
  register: users_no_passwd

- name: Print users without password warning
  debug:
    msg: "THE FOLLOWING USERS DO NOT HAVE PASSWORD: {{ users_no_passwd.stdout_lines }}"
  when: users_no_passwd.stdout_lines is defined

- name: Find superadmin accounts besides root
  shell: cat /etc/passwd | cut -d":" -f1,3 | grep -w 0 | grep -v root | cut -d":" -f1
  changed_when: false
  register: uid0_no_root

- name: Print UID 0 users warning
  debug:
    msg: "THE FOLLOWING USERS HAVE UID 0 AND ARE NOT root ACCOUNT: {{ uid0_no_root.stdout_lines }}"
  when: uid0_no_root.stdout_lines is defined

- name: Get all user accounts
  getent:
    database: passwd

- name: Get enabled users that must be disabled
  vars:
    must_enabled_users:
      - root
      - ubuntu
      - "{{ current_user }}"
      - centos
      - ec2-user
      - halt
      - shutdown
  set_fact:
    must_disabled_users: "{{ getent_passwd \
     | difference(getent_passwd \
     | dict2items \
     | json_query('[? contains(value,`/sbin/nologin`)].key')) \
     | difference(must_enabled_users) }}"

- name: Disable enabled system users
  user:
    name: "{{ item }}"
    shell: /sbin/nologin
  with_items: "{{ must_disabled_users }}"
  when: must_disabled_users is defined
