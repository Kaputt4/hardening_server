---
# Tasks file for notify role


- name: Add curl & inotify package Debian
  apt:
    pkg:
      - curl
      - inotify-tools
    state: present
  become: true
  notify: Restart crowdsec
  when: ansible_os_family == "Debian"

- name: Add curl & inotify package EL/CentOS 7 & Amazon
  yum:
    name:
      - curl
      - inotify-tools
    state: present
  become: true
  notify: Restart crowdsec
  when: >
    ((ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux') and
    ansible_distribution_major_version == "7") or
    ansible_distribution == 'Amazon'

- name: Add curl & inotify package EL/CentOS 8 & EL/CentOS 9
  dnf:
    name:
      - curl
      - inotify-tools
    state: present
  become: true
  notify: Restart crowdsec
  when:
    - ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'
    - ansible_distribution_major_version == "8" or ansible_distribution_major_version == "9"

- name: Set Telegram API variables
  set_fact:
    token: "{{ lookup('env', 'TELEGRAM_TOKEN') }}"
    id_chat: "{{ lookup('env', 'TELEGRAM_ID_CHAT') }}"

- name: Set notify scripts variables
  set_fact:
    notifydata: "{{ notifydata | default([]) + [{'dest': item.dest, 'message': item.message, 'log': item.log, 'string': item.string}] }}"
    
  loop:
    - {dest: 'auth', message: 'New session opened', log: '/var/log/auth.log', string: 'session opened'}

- name: Create notify scripts
  template:
    src: inotify.sh.j2
    dest: "/tmp/{{ item.dest }}.sh"
    mode: u=rwx,g=rw,o=
  loop: "{{ notifydata }}"

- name: Create notify services
  template:
    src: inotify.service.j2
    dest: "/lib/systemd/system/{{ item.dest }}.service"
    mode: u=rwx,g=rw,o=
  loop: "{{ notifydata }}"

- name: Enable notify services
  systemd:
    name: "{{ item.dest }}.service"
    enabled: true
  loop: "{{ notifydata }}"

- name: Start notify services
  service:
    name: "{{ item.dest }}.service"
    state: started
  loop: "{{ notifydata }}"
